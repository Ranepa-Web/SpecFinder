import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
// –ü–æ–¥–∫–ª—é—á–∞–µ–º SVG –∏–∫–æ–Ω–∫–∏ –∫–∞–∫ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { ReactComponent as PasswordIcon } from '../images/password.svg';
import { ReactComponent as EmailIcon } from '../images/mail.svg';
// import { ReactComponent as UserIcon } from '../images/user.svg'; // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∫–æ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

export const RegisterForm = () => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState('');
    const [successMessage, setSuccessMessage] = useState('');
    const { register } = useAuth();
    const navigate = useNavigate();

    const handleSubmit = async (e) => {
        e.preventDefault();
        setError('');
        setSuccessMessage('');

        if (!name || !email || !password || !confirmPassword) {
             setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.'); return;
        }
        if (password !== confirmPassword) {
            setError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç.'); return;
        }
        if (password.length < 6) { // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª–∏–Ω—ã –∏ –∑–¥–µ—Å—å
            setError('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤.'); return;
        }

        try {
            const result = await register(name, email, password);
            setSuccessMessage(result.message + ' –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.');
            // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
            setName(''); setEmail(''); setPassword(''); setConfirmPassword('');
            // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ 2 —Å–µ–∫
            setTimeout(() => { navigate('/login'); }, 2000);
        } catch (err) {
            setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
            setSuccessMessage('');
        }
    };

    return (
        <div className="container mt-5">
            <div className="row justify-content-center">
                <div className="col-md-6">
                    <div className="card">
                        <div className="card-body">
                            <h2 className="card-title text-left mb-4">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

                            {error && <div className="alert alert-danger" role="alert">{error}</div>}
                            {successMessage && <div className="alert alert-success" role="alert">{successMessage}</div>}

                            <form onSubmit={handleSubmit}>
                                {/* –ò–º—è */}
                                <div className="mb-3">
                                     <label htmlFor="register-name" className="form-label">–ò–º—è <span className="text-primary">*</span></label>
                                     <div className="input-group">
                                         <div className="input-group-text"><span>üë§</span></div> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –Ω–µ—Ç UserIcon */}
                                         <input type="text" id="register-name" className="form-control" placeholder="–í–∞—à–µ –∏–º—è..." value={name} onChange={(e) => setName(e.target.value)} required />
                                     </div>
                                 </div>
                                 {/* Email */}
                                 <div className="mb-3">
                                     <label htmlFor="register-email" className="form-label">E-mail <span className="text-primary">*</span></label>
                                     <div className="input-group">
                                         <div className="input-group-text"><EmailIcon/></div> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º SVG –∏–∫–æ–Ω–∫—É */}
                                         <input type="email" id="register-email" className="form-control" placeholder="–í–∞—à e-mail..." value={email} onChange={(e) => setEmail(e.target.value)} required />
                                     </div>
                                 </div>
                                 {/* –ü–∞—Ä–æ–ª—å */}
                                 <div className="mb-3">
                                     <label htmlFor="register-password" className="form-label">–ü–∞—Ä–æ–ª—å <span className="text-primary">*</span></label>
                                     <div className="input-group">
                                         <div className="input-group-text"><PasswordIcon/></div> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º SVG –∏–∫–æ–Ω–∫—É */}
                                         <input type="password" id="register-password" className="form-control" placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω. 6 —Å–∏–º–≤)..." value={password} onChange={(e) => setPassword(e.target.value)} required />
                                     </div>
                                 </div>
                                 {/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ü–∞—Ä–æ–ª—è */}
                                 <div className="mb-3">
                                     <label htmlFor="register-confirmPassword" className="form-label">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å <span className="text-primary">*</span></label>
                                     <div className="input-group">
                                          <div className="input-group-text"><PasswordIcon/></div> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º SVG –∏–∫–æ–Ω–∫—É */}
                                         <input type="password" id="register-confirmPassword" className="form-control" placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å..." value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />
                                     </div>
                                 </div>
                                {/* –ö–Ω–æ–ø–∫–∞ */}
                                <button type="submit" className="btn btn-primary w-100">
                                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                                </button>
                                {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Ö–æ–¥ */}
                                <div className="auth-link text-center mt-3">
                                    –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
                                    <Link to="/login">–í–æ–π—Ç–∏</Link>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};